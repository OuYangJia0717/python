import os
import requests
import json
import oss2
from concurrent.futures import ThreadPoolExecutor,wait   #导入并发线程池
# os.makedirs()仅仅只是创建文件夹，可以多层
# os.mkdir(r'D:\QQMusicCache\1.txt') 只能创建单层文件夹
# os.remove() 删除路径为path的文件。如果path 是一个文件夹，将抛出OSError;
# os.rmdir(path) 删除path指定的空目录，如果目录非空，则抛出一个OSError异常。
# os.removedirs(r'D:\QQMusicCache\Temp\ouye')只能删除为空的路径文件夹
#os.rmdir(path) 删除path指定的空目录，如果目录非空，则抛出一个OSError异常	
# for root,dir,files in os.walk(r'D:\Data\Blood\0100'): #第一个是当前路径，第二个是当前路径下的文件夹，第三个是文件
#     for file in files:#获取所有的文件路径
#         filepath=os.path.join(root,file)
#         # s=os.path.split(filepath) 仅仅只是分割路径和文件名
#         s=filepath.split("\\")[4]
#         if s=='Fields':
#             print('包含fields')
#         else:
#             print(filepath)
        # #获取当前文件夹中包含Cells
        # if filepath.__contains__('Cells'):
        #     continue
        # else:
        #     print(filepath)
# r = requests.get('http://fc.landing-med.com/cloud-service/c2AiHandler/getWaitingAiSampleDatas')
# list = r.json()
# if list['status'] =='ok':
#     datas = r.json()
#     print(datas)
    # json_data= json.loads(datas)
    # print(json_data)



#定义一个上传函数
def Upload(cpath,path):
    bucket.put_object_from_file(cpath,path)
# 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建RAM账号。
auth = oss2.Auth('账号','密码') #认证
#第一个参数为认证，第二个参数为地域节点，第三个为Bucket名
bucket = oss2.Bucket(auth, 'oss-cn-shenzhen.aliyuncs.com', '当前账户OSS上的文件夹名')
localPath=r'D:\Data\Blood\1455' #本地路径
sampleCode=localPath.split('\\')[-1] #样本号
executor=ThreadPoolExecutor(max_workers=10) #线程池
future=[]
#开始上传
for root,dirs,files in os.walk(localPath):
    for file in files:
        filepath=os.path.join(root,file)#每个本地文件路径
        temp=filepath.replace(localPath,sampleCode) #上传oss的路径
        cloudPath=temp.replace('\\','/')
        future.append(executor.submit(Upload,cloudPath,filepath))
wait(future)
print('样本{0}上传完成'.format(sampleCode))
